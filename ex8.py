""" 8. Паттерн "Моносостояние """

"""Хотим создать такой класс, где у каждого экземпляра будут одинаковые взаимосвязанные
атрибуты, которые можно изменять и добавлять. Например, когда каждый экземпляр
находится в отдельном потоке."""

class ThreadData:
	__shared_attrs = { # общие локальные атрибуты экземпляров
		'name': 'thread_1',
		'data': {},
		'id': 1
	}

	def __init__(self):
		self.__dict__ = self.__shared_attrs

th1 = ThreadData()
th2 = ThreadData()
th2.id = 3 #если изменить свойство, то оно изменится во всех экземплярах
th1.attr_new = 'new_attr' # добавляется общее локальное свойство


pass
