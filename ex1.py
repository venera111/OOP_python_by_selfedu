""" 1. Классы и объекты. Атрибуты класса и атрибуты экземпляров класса"""

class Point:
	color = 'red'
	circle = 2

Point.color = 'black' # сразу изменим атрибут класса

a = Point() # экземпляр класса
b = Point() # экземпляр класса

Point.circle = 1 # изменим атрибут класса и он изменится везде в объектах, тк они ссылаются на класс

print(a.color) # получаем атрибут класса
a.color = 'green' # создаем переменную в текущем пространстве имен экземпляра "а"
print(a.__dict__) # атрибут экземпляра класса {'color': 'green'}

Point.type_pt = 'disc' # создаем новый атрибус класса

# если в классе не существует атрибута, то он динамически добавляется:
setattr(Point, 'prop', 1) # создаем новый атрибус класса
# а если существует, то только поменяем значение:
setattr(Point, 'type_pt', 'square')

# прочитать значение атрибута класса:
res = Point.circle
print(res)

# если атрибута не существует в пространстве имен, то можно избежать ошибки:
print(getattr(Point, 'a', 'False'))

# если атрибут существует в пространстве имен, то просто выведем его:
print(getattr(Point, 'color', 'False'))

# удалить атрибут из класса
del Point.prop
# удалять несуществующие нельзя - ошибка
# del Point.prop
# вызовем проверку
print(hasattr(Point, 'prob'))

print(hasattr(Point, 'circle'))

# удалять тольок те атрибуты, которые существуют в классе
delattr(Point, 'type_pt')

#hasattr не говорит, что 'circle' находится в пространстве экземпляра "а":
print(hasattr(a, 'circle'))
print(a.__dict__)

# удаление происходит в текущем пространстве имен
# del a.circle #- ошибка
del a.color # удаление атрибута экземпляра класса
print(a.__dict__) # но теперь a.color будет ссылаться на атрибут класса

# сначала атрибут ищется в текущем пространстве, если не находится, то ищется во внешнем
# внешний для объекта - класс от которого он образован

# заново
class Point:
	'''Класс координат точек на плоскости'''
	color = 'red'
	circle = 2

a = Point() # экземпляр класса
b = Point() # экземпляр класса

a.x = 1 # объект содержит собственные локальные атрибуты
a.y = 2
b.x = 10
b.y = 20
#динамически создали атрибуты для экземпляров, они независимы между собой
# а color и circle как общие данные
print(Point.__doc__) # описание класса

del res

print('заглушка')
